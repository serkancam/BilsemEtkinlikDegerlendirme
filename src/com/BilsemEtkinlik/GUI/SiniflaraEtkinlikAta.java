/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.BilsemEtkinlik.GUI;
import com.BilsemEtkinlik.Is.*;
import com.BilsemEtkinlik.DAO.*;
import com.BilsemEtkinlik.Entity.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author serkancam
 */
public class SiniflaraEtkinlikAta extends javax.swing.JFrame {
    int secilenDers,secilenModul,secilenEtkinlik=-1;

    /**
     * Creates new form SiniflaraEtkinlikAta
     */
    public SiniflaraEtkinlikAta() {
        initComponents();
    }
     void DerslerCbDoldur()
    {
      
        List<Dersler> dersler =null;
       Dersler d=new Dersler();
       DerslerDAO islem=new DerslerDAO();
       dersler=islem.TumDersleriGetir();
      
        for (Dersler ders : dersler) 
        {
            
           // Cift c=;
            cbDersler.addItem(new Cift(ders.getDersId(),ders.getDersAdi()).toString());
           
        }
        
    }
    void EtkinliklerCbDoldur()
    {
     
       List<Etkinlikler> etkinlikler =null;
       Etkinlikler et=new Etkinlikler();
       Moduller mdl=new Moduller();
       mdl.setModulId(secilenModul);
       et.setModul(mdl);
       EtkinliklerDAO islem=new EtkinliklerDAO();
       etkinlikler=islem.ModulIdyeGoreGetir(et);
      
        for (Etkinlikler etl : etkinlikler) 
        {
            
           // Cift c=;
            cbEtkinlikler.addItem(new Cift(etl.getEtkinlikId(),etl.getEtkinlikAdi()).toString());
            
            
        }
        
    }
    void ModullerCbDoldur()
    {
     
      
       List<Moduller> moduller =null;
       Moduller m=new Moduller();
       Dersler ders=new Dersler();
       ders.setDersId(secilenDers);
       m.setDers(ders);
       ModullerDAO islem=new ModullerDAO();
       moduller=islem.EtkinlikIdyeGoreGetir(m);
      
        for (Moduller mdl : moduller) 
        {
            
           // Cift c=;
            cbModuller.addItem(new Cift(mdl.getModulId(),mdl.getModulAdi()).toString());
            
            
        }
        
    }
     void SiniflarTablosuDoldur()
    {
        TabloIslemleri.TabloTemizle(tblSiniflar);
        List<Siniflar> siniflar =null;
        SiniflarDAO islem=new SiniflarDAO();
            
       siniflar=islem.TumListeyiGetir();
       DefaultTableModel model= (DefaultTableModel) tblSiniflar.getModel();
        for (Siniflar sinif : siniflar) 
        {
            
            model.addRow(new Object[]{false,sinif.getSinifId(),sinif.getSinifKodu(),sinif.getProgram().getProgramAdi()});
            
            
        }
    }
      void AkarilanEtkinliklerTablosuDoldur()
    {
        TabloIslemleri.TabloTemizle(tblEkinlikAtananSiniflar);
        List<SinifEtkinlikleri> sinifEtkinlik =null;
        SinifEtkinlikleriDAO islem=new SinifEtkinlikleriDAO();
            
       sinifEtkinlik=islem.EtkinlikIdyeGoreGetir(secilenEtkinlik);
       DefaultTableModel model= (DefaultTableModel) tblEkinlikAtananSiniflar.getModel();
        for (SinifEtkinlikleri sinifEtk : sinifEtkinlik) 
        {
            
            model.addRow(new Object[]{false,sinifEtk.getSinif().getSinifId(),sinifEtk.getSinif().getSinifKodu()});
            
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSiniflar = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEkinlikAtananSiniflar = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbDersler = new javax.swing.JComboBox<>();
        cbModuller = new javax.swing.JComboBox<>();
        cbEtkinlikler = new javax.swing.JComboBox<>();
        btnEtkinlikAktar = new javax.swing.JButton();
        btnEtkinlikKaldir = new javax.swing.JButton();
        lblBilgi = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblSiniflar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seç", "SınıfId", "Sınıf Kodu", "Program Adi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSiniflar);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 330, 230));

        tblEkinlikAtananSiniflar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seç", "SınıfId", "Sınıf Kodu"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblEkinlikAtananSiniflar);
        if (tblEkinlikAtananSiniflar.getColumnModel().getColumnCount() > 0) {
            tblEkinlikAtananSiniflar.getColumnModel().getColumn(0).setResizable(false);
            tblEkinlikAtananSiniflar.getColumnModel().getColumn(0).setPreferredWidth(100);
            tblEkinlikAtananSiniflar.getColumnModel().getColumn(1).setResizable(false);
            tblEkinlikAtananSiniflar.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblEkinlikAtananSiniflar.getColumnModel().getColumn(2).setResizable(false);
            tblEkinlikAtananSiniflar.getColumnModel().getColumn(2).setPreferredWidth(500);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 170, 250, 230));

        jLabel1.setText("Sınıflar");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jLabel2.setText("Etkinliğe Atanan Sınıflar");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 150, -1, -1));

        cbDersler.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ders Seç" }));
        cbDersler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDerslerActionPerformed(evt);
            }
        });
        getContentPane().add(cbDersler, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 280, -1));

        cbModuller.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Modül Seç" }));
        cbModuller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbModullerActionPerformed(evt);
            }
        });
        getContentPane().add(cbModuller, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 280, -1));

        cbEtkinlikler.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Etkinlik Seç" }));
        cbEtkinlikler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEtkinliklerActionPerformed(evt);
            }
        });
        getContentPane().add(cbEtkinlikler, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 280, -1));

        btnEtkinlikAktar.setText("Seçilen sınflara etkinlik aktar");
        btnEtkinlikAktar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEtkinlikAktarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEtkinlikAktar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 220, 30));

        btnEtkinlikKaldir.setText("Seçilen etkinlikten sınıfları kaldır");
        btnEtkinlikKaldir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEtkinlikKaldirActionPerformed(evt);
            }
        });
        getContentPane().add(btnEtkinlikKaldir, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, 220, 30));

        lblBilgi.setText("İşlem Bilgisi:");
        getContentPane().add(lblBilgi, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, 220, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbDerslerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDerslerActionPerformed
        // TODO add your handling code here:
        TabloIslemleri.ComboBoxTemizle(cbModuller, "Modül Seç");
        secilenDers=-1;               
        
       if(cbDersler.getSelectedIndex()>0)
       {
        secilenDers=Integer.parseInt(cbDersler.getSelectedItem().toString().split("-")[0]);
        ModullerCbDoldur();
       }
    }//GEN-LAST:event_cbDerslerActionPerformed

    private void cbModullerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbModullerActionPerformed
        // TODO add your handling code here:
        System.out.println("com.BilsemEtkinlik.GUI.EtkinlikSorusuEkle.cbModullerActionPerformed()");
       
        TabloIslemleri.ComboBoxTemizle(cbEtkinlikler, "Etkinlik Seç");
        secilenModul=-1;
        
        if(cbModuller.getSelectedIndex()>0)
        {
            secilenModul=Integer.parseInt(cbModuller.getSelectedItem().toString().split("-")[0]);
            EtkinliklerCbDoldur();
        }
    }//GEN-LAST:event_cbModullerActionPerformed

    private void cbEtkinliklerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEtkinliklerActionPerformed
        // TODO add your handling code here:
         System.out.println("com.BilsemEtkinlik.GUI.SiniflaraEtkinlikAta.cbEtkinliklerActionPerformed()");
         TabloIslemleri.TabloTemizle(tblEkinlikAtananSiniflar);
       
        secilenEtkinlik=-1;
        if(cbEtkinlikler.getSelectedIndex()>0)
        { 
            secilenEtkinlik=Integer.parseInt(cbEtkinlikler.getSelectedItem().toString().split("-")[0]);
            AkarilanEtkinliklerTablosuDoldur();
        }
    }//GEN-LAST:event_cbEtkinliklerActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        SiniflarTablosuDoldur();
        DerslerCbDoldur();
    }//GEN-LAST:event_formWindowOpened

    private void btnEtkinlikAktarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEtkinlikAktarActionPerformed
        // TODO add your handling code here:
        if(secilenEtkinlik>0)
        {
            List<SinifEtkinlikleri> setkinlikler=new ArrayList<>();
            SinifEtkinlikleriDAO islem=new SinifEtkinlikleriDAO();
                    
            DefaultTableModel model= (DefaultTableModel) tblSiniflar.getModel();
            int rowCount = model.getRowCount();
            
            int t=0;
            for (int i = 0; i <rowCount; i++)
            {
                SinifEtkinlikleri setkinlik=new SinifEtkinlikleri();
                Etkinlikler et=new Etkinlikler();
                Siniflar sinif=new Siniflar();
                if ((boolean)model.getValueAt(i, 0)==true)
                {
                    
                    et.setEtkinlikId(secilenEtkinlik);
                    sinif.setSinifId(Integer.parseInt(model.getValueAt(i, 1).toString()));
                    setkinlik.setEtkinlik(et);
                    setkinlik.setSinif(sinif);
                   
                    setkinlikler.add(setkinlik);
                }
            }
            for(SinifEtkinlikleri setk:setkinlikler )
            {
                if(islem.Ekle(setk)>0)
                {
                    t++;
                }
            }
            if(t==setkinlikler.size())
            {
                lblBilgi.setText("İşlem Bilgisi: ekleme işlemleri başarılı");
            }
            AkarilanEtkinliklerTablosuDoldur();
            
        }
    }//GEN-LAST:event_btnEtkinlikAktarActionPerformed

    private void btnEtkinlikKaldirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEtkinlikKaldirActionPerformed
        // TODO add your handling code here:
        if(secilenEtkinlik>0)
        {
            List<SinifEtkinlikleri> setkinlikler=new ArrayList<>();
            SinifEtkinlikleriDAO islem=new SinifEtkinlikleriDAO();
                    
            DefaultTableModel model= (DefaultTableModel) tblEkinlikAtananSiniflar.getModel();
            int rowCount = model.getRowCount();
            
            int t=0;
            for (int i = 0; i <rowCount; i++)
            {
                SinifEtkinlikleri setkinlik=new SinifEtkinlikleri();
                Etkinlikler et=new Etkinlikler();
                Siniflar sinif=new Siniflar();
                if ((boolean)model.getValueAt(i, 0)==true)
                {
                    
                    et.setEtkinlikId(secilenEtkinlik);
                    sinif.setSinifId(Integer.parseInt(model.getValueAt(i, 1).toString()));
                    setkinlik.setEtkinlik(et);
                    setkinlik.setSinif(sinif);
                   
                    setkinlikler.add(setkinlik);
                }
            }
            for(SinifEtkinlikleri setk:setkinlikler )
            {
                if(islem.Sil(setk)>0)
                {
                    t++;
                }
            }
            if(t==setkinlikler.size())
            {
                lblBilgi.setText("İşlem Bilgisi: Silme işlemleri başarılı");
            }
            AkarilanEtkinliklerTablosuDoldur();
            
        }
    }//GEN-LAST:event_btnEtkinlikKaldirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SiniflaraEtkinlikAta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SiniflaraEtkinlikAta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SiniflaraEtkinlikAta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SiniflaraEtkinlikAta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SiniflaraEtkinlikAta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEtkinlikAktar;
    private javax.swing.JButton btnEtkinlikKaldir;
    private javax.swing.JComboBox<String> cbDersler;
    private javax.swing.JComboBox<String> cbEtkinlikler;
    private javax.swing.JComboBox<String> cbModuller;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBilgi;
    private javax.swing.JTable tblEkinlikAtananSiniflar;
    private javax.swing.JTable tblSiniflar;
    // End of variables declaration//GEN-END:variables
}
